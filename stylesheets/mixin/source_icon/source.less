///******************************************/
///*          flezz framework 1.0           */
///******************************************/
///*  Name: icon source
///*  Version: 0.2.9
///*  Description: description icon source
///*  Author: Giancarlo Ortiz.
///*  URI: http://www.zerez.org
///*  License: GNU General Public License v2 or later
///*  License URI: http://www.gnu.org/licenses/gpl-2.0.html
///*  Tags: iconos, css.
///******************************************/
///*  Requiere: none.
///******************************************/
///*  	Content
///*
///*  1. Local variables.
///*  2. Road map.
///*  3. Base component.
///*  4. Config mixin.
///*  5. Preconfigured patterns.
///*  6. Initialized patterns.
///******************************************/
///* Dependencies */
@import '../_shared/_shared.less';
@import 'source-awesome.less';
@import 'source-foundation.less';
@import 'source-glyphicons.less';
//
///* 1 *//* LOCAL VARIABLES *///
.icon-source-local-var() {

}
///* 2 *//* ROAD MAP */
// --------------------------------------------------

// --------------------------------------------------
//
///* 3 *//* BASE COMPONENT */
.icn-source-init() {
    & when (@icon-multiple-sources = true) {
        ///* init - path *///
        .scr-awesome-init();
        .scr-foundation-init();
        .scr-glyphicon-init();
        ///* init - class - icon *///
        .scr-class-awesome-init();
        .scr-class-foundation-init();
        .scr-class-glyphicon-init();
    }
    & when not (@icon-multiple-sources = true) {
        .scr-icon-init-path(@icon-default-font);
        .scr-class(@icon-default-font);
    }
}
//
///* 4 *//* CONFIG MIXIN */
.scr-awesome-init() when (@icon-awesome = true){
    .scr-icon-init-path(awesome);
}
.scr-glyphicon-init() when (@icon-glyphicons = true){
    .scr-icon-init-path(glyphicons);
}
.scr-foundation-init() when (@icon-foundation = true){
    .scr-icon-init-path(foundation);
}
//
.scr-class-awesome-init() {
    & when (@icon-shared-prefix = true) {
        @general-css-prefix: ~'@{icon-general-prefix}-@{fa-prefix}';
        .scr-class(awesome, @general-css-prefix);
    }

    & when not (@icon-shared-prefix = true) {
        .scr-class(awesome, @fa-prefix);
    }
}

.scr-class-foundation-init() {
    & when (@icon-shared-prefix = true) {
        @general-css-prefix: ~'@{icon-general-prefix}-@{fi-prefix}';
        .scr-class(foundation, @general-css-prefix);
    }

    & when not (@icon-shared-prefix = true) {
        .scr-class(foundation, @fi-prefix);
    }
}

.scr-class-glyphicon-init() {
    & when (@icon-shared-prefix = true) {
        @general-css-prefix: ~'@{icon-general-prefix}-@{gi-prefix}';
        .scr-class(glyphicons, @general-css-prefix);
    }

    & when not (@icon-shared-prefix = true) {
        .scr-class(glyphicons, @gi-prefix);
    }
}
 
.scr-icon-init-path(@font) {
    & when (@font = foundation) {
        @family: @fi-family;
        @version: @fi-version;
        @name: @fi-name;
        @embedded: @fi-embedded;
        .font-face(@family, @version, @icon-path, @name, @icon-embedded, @embedded);
    }

    & when (@font = glyphicons) {
        @family: @gi-family;
        @version: @gi-version;
        @name: @gi-name;
        @embedded: @gi-embedded;
        .font-face(@family, @version, @icon-path, @name, @icon-embedded, @embedded);
    }

    & when (@font = awesome) {
        @family: @fa-family;
        @version: @fa-version;
        @name: @fa-name;
        @embedded: @fa-embedded;
        .font-face(@family, @version, @icon-path, @name, @icon-embedded, @embedded);
    }
}
//
///* 5 *//* PRECONFIGURED PATTERNS */

//
///* 6 *//* INITIALIZED PATTERNS */
.scr-init(){
    .icon-source-local-var();
    .icn-source-init();
}
//
/* sources ----------- [ + ] */@state: OK;
///******************************************/
///*  	FIN
///******************************************/
