///******************************************/
///*          flezz framework 1.0           */
///******************************************/
///*  Name: icons
///*  Version: 0.2.7
///*  Description: description icons
///*  Author: Giancarlo Ortiz.
///*  URI: http://www.zerez.org
///*  License: GNU General Public License v2 or later
///*  License URI: http://www.gnu.org/licenses/gpl-2.0.html
///*  Tags: iconos, css.
///******************************************/
///*  	Content
///*
///*  1. Included component.
///*  2. local variables.
///*  3. Initialized component
///******************************************/
///* 1 *//* INCLUDED MODULES *///
@import 'awesome.less';
@import 'foundation.less';
@import 'glyphicons.less';
//
///* 2 *//* LOCAL VARIABLES *///
.icon-local-var() {
}
//
///* 3 *//* INITIALIZED MODULES *
.icon-init() {
    .awesome-init();
    .glyphicon-init();
    .foundation-init();
    .icn-class(fa,awesome);
    .icn-class(gi,glyphicons);
    .icn-class(fu,foundation);
}
//
//
.awesome-init() when (@icon-awesome = true){
    .icon-init-path(awesome);
}
.glyphicon-init() when (@icon-glyphicons = true){
    .icon-init-path(glyphicons);
}
.foundation-init() when (@icon-foundation = true){
    .icon-init-path(foundation);
}
//
//
.icon-init-path(@font) {
    & when (@font = foundation) {
        @family: 'Foundation';
        @version: @fu-version;
        @name: @fu-name;
        @embedded: @fu-embedded;
        .font-face(@family, @version, @icon-path, @name, @embedded);
    }

    & when (@font = glyphicons) {
        @family: 'Glyphicons';
        @version: @gi-version;
        @name: @gi-name;
        @embedded: @gi-embedded;
        .font-face(@family, @version, @icon-path, @name, @embedded);
    }

    & when (@font = awesome) {
        @family: 'Awesome';
        @version: @fa-version;
        @name: @fa-name;
        @embedded: @fa-embedded;
        .font-face(@family, @version, @icon-path, @name, @embedded);
    }
}
///* init @font-face */
.font-face(@opc-family, @opc-version, @font-path, @opc-name-font, @opc-embedded) {
    @selector: ~"@font-face";

    & when (@icon-embedded = true) {
        .@{selector} {
            font-family: @opc-family;
            src: ~'url("@{font-path}/@{opc-name-font}.eot")';
            src: ~'url("@{font-path}/@{opc-name-font}.eot?#iefix") format("embedded-opentype")',
                ~'url("data:application/font-woff2;charset=utf-8;base64,@{opc-embedded}") format("woff2")',
                ~'url("@{font-path}/@{opc-name-font}.woff") format("woff")',
                ~'url("@{font-path}/@{opc-name-font}.ttf") format("truetype")',
                ~'url("@{font-path}/@{opc-name-font}.svg#fontcustom") format("svg")';
            font-weight: normal;
            font-style: normal;
        }
    }

    & when not (@icon-embedded = true) {
        .@{selector} {
            font-family: @opc-family;
            src: ~'url("@{font-path}/@{opc-name-font}.eot")';
            src: ~'url("@{font-path}/@{opc-name-font}.eot?#iefix") format("embedded-opentype")',
                ~'url("@{font-path}/@{opc-name-font}.woff") format("woff")',
                ~'url("@{font-path}/@{opc-name-font}.ttf") format("truetype")',
                ~'url("@{font-path}/@{opc-name-font}.svg#fontcustom") format("svg")';
            font-weight: normal;
            font-style: normal;
        }
    }
}
//
/* icon ----------- [ FULL ] */@state: OK;
///******************************************/
///*  	FIN
///******************************************/
