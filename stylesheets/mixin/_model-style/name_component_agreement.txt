///*******************************
///* COMPONENT AGREEMENT
///*******************************
///* name spaces
///*******************************
///*  	Content
///*
///*  1. Config component.
///*  2. Road map.
///*  3. Base component.
///*  4. Config mixin.
///*  5. Preconfigured patterns.
///*  6. Initialized patterns.
///*******************************
///*  1. Config component.
///*******************************
/***** variables globales *******/
variables de configuración globales serán exportadas a _set.[name-module].less
inician con el nombre del componente y representan un parámetro de 
configuración del componente. estas permitiran configurar el modulo y 
podran ser reecritas en cada una de las llamadas al modulo, 
ya sea para construir un tema o como un componente individual
EJEMPLO (componente buttons):
@buttons-font-color: white;
/***** variables locales *******/
las variables locales no serán exportadas y estan encerradas en un mixin 
para evitar que contaminen el espacio global (scope)
son nombres cortos o pequeñas adaptaciones de las variables globales, 
inician con tres letras del nombre del componente.
los valores por defecto de los parametros inician con @dfl-*
EJEMPLO (componente buttons):
.buttons-local-var() {
	@color-font-dark: darken(white, 50%); 
	@dfl-border-color: transparent;
	....
}

///*******************************
///*  2. Road map.
///*******************************
Incluye características a desarrollar del componente
inician con el nombre del componente y representan un parámetro de 
configuración del componente.
EJEMPLO (componente buttons):
@buttons-depth: true;

///*******************************
///*  3. Base component.
///*******************************
incluye los mixin básicos de mayor configuración posible
inician con tres letras del nombre del componente.
los parámetros que se reciben como entrada en un mixin, 
tienen un nombre corto que de una idea clara de la variable.
los valores por defecto de los parametros inician con @dfl-*
EJEMPLO (componente buttons):
.btn-buttons(@color: @dfl-color){
	...
	...
}
///*******************************
///*  4. Config mixin.
///*******************************
incluye mixin guard que son llamados desde los mixin base 
declarados en el #3 
inician con tres letras del nombre del componente.
.[abc]-[name-component](@opc-[parametro1]:@dfl-[value-default1],@opc-[parametro2]:@dfl-[value-default2]){ 
	...
	statement
	...
}
Cuando se declaran los mixin los parámetros que se reciben 
como entrada inician con @opc-*
EJEMPLO (componente buttons):
se declara en #4 config mixin
.btn-inline(@opc-inline) when (@opc-inline = false) {
    display: block;
}

Cuando estos mixin se llaman en #3 los parámetros que se reciben
son opciones del mixin base por tanto tienen un nombre corto 
que de una idea clara de la variable.
los valores por defecto utilizados en los parámetros inician con @dfl-*
EJEMPLO (componente buttons):
se llama en #3
.btn-buttons(@color: @dfl-color){
	 ...
	.btn-inline(@inline);
	...
 }

///*******************************
///*  5. preconfigured patterns.
///*******************************
incluye un conjunto de mixin con patrones preconfigurados 
que llaman a los mixin base.
inician con el nombre del componente.

.[name-component]-[name-pattern](@opc-[parametro1]:value1, ...)
{
	...
}
los parámetros siguen las reglas especificadas en #3 
EJEMPLO (componente buttons):
.buttons-largue(){
	...
    .btn-buttons(...);
	...
}
///*******************************
///*  6. initialized patterns.
///*******************************
incluye uno o varias opciones para inicializar los patrones de diseño
estos mixin son los únicos que al ser llamados generan clases de CSS...
no deberían tener parámetros de entrada
inician con el nombre del componente y terminan con la palabra init
.[name-component]-init(){... }

EJEMPLO (componente buttons) @buttons-init().:
.buttons-init() {
    ...
	.btn-var(...);       //variables locales
	.buttons-largue();   //patron de diseño
	...
	.[name-component]-[name-pattern](@opc-[parametro1]:value1, ...);
	...
	
}
///*******************************
///*  FIN
///*******************************


